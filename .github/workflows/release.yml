name: Release
on:
  push:
    branches:
      - 'release/*'

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  HUSKY: 0

jobs:
  # build:
  #   if: github.repository == 'plughacker/malga-tokenization'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 20
  #         cache: yarn
  #     - run: yarn install --frozen-lockfile

  test:
    if: github.repository == 'plughacker/malga-tokenization'
    # needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v4
        with:
          run_install: true
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - run: pnpm test:ci

  release:
    name: Changesets Release
    needs: [test]
    if: github.repository == 'plughacker/malga-tokenization'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: pnpm

      - name: Install dependencies
        uses: bahmutov/npm-install@v1

      - name: Setup npm auth
        run: |
          echo "registry=https://registry.npmjs.org" >> ~/.npmrc
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

      - name: Release and Publish
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm version
          commit: 'chore: update version for release'
          title: 'chore: update version for release'
          publish: pnpm release
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
